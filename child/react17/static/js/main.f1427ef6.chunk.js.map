{"version":3,"sources":["public-path.ts","router/config.tsx","router/index.tsx","index.tsx"],"names":["window","__MICRO_APP_ENVIRONMENT__","__webpack_public_path__","__MICRO_APP_PUBLIC_PATH__","routerGuard","route","props","PageComponent","routers","path","React","lazy","map","i","exact","render","bind","Loading","NavigatorFromBaseApp","history","useHistory","useEffect","microApp","addDataListener","data","location","pathname","push","App","Suspense","fallback","mount","ReactDOM","document","getElementById","__MICRO_APP_NAME__","unmount","unmountComponentAtNode"],"mappings":"wGAEIA,OAAOC,4BAETC,IAA0BF,OAAOG,4B,qICmB7BC,EAAc,SAACC,EAAWC,GAC9B,IAAQC,EAAkBF,EAAlBE,cACR,OAAO,cAACA,EAAD,2BAAmBF,GAAWC,KAYxBE,EA7BkB,CAC/B,CACEC,KAAK,IACLF,cAAcG,IAAMC,MAAK,kBAAI,kCAE/B,CACEF,KAAM,gBACNF,cAAeG,IAAMC,MAAK,kBAAM,yDAaTC,KAAI,SAACP,EAAOQ,GAAR,OAC7B,cAAC,IAAD,CAEEC,OAAO,EACPL,KAAMJ,EAAMI,KACZM,OAAQX,EAAYY,KAAK,KAAMX,IAH1BA,EAAMI,SC1BTQ,EAAS,kBAAK,mDAGdC,EAAgC,WACpC,IAAMC,EAAUC,cAWhB,OATAC,qBAAU,WAAO,IAAD,EACd,UAAArB,OAAOsB,gBAAP,SAAiBC,iBAAgB,SAACC,GAE5BA,EAAKf,MAAQe,EAAKf,OAASU,EAAQM,SAASC,UAC9CP,EAAQQ,KAAKH,EAAKf,WAGrB,CAACU,IAEG,MA2BMS,MAxBf,WASE,OACE,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SAEA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACKtB,U,YCiBX,SAASuB,IACPC,IAASjB,OAEL,cAAC,EAAD,IAGFkB,SAASC,eAAe,iBA1CtBlC,OAAOC,2BAKTD,OAAOsB,SAASC,iBAAgB,SAACC,OAoDjCxB,OAAOC,0BAETD,OAAO,aAAD,OAAcA,OAAOmC,qBAAwB,CAAEJ,QAAOK,QAR9D,WACEJ,IAASK,uBAAuBJ,SAASC,eAAe,mBAUxDH,M","file":"static/js/main.f1427ef6.chunk.js","sourcesContent":["/* eslint-disable no-undef */\n// @ts-ignore\nif (window.__MICRO_APP_ENVIRONMENT__) {\n  // @ts-ignore\n  __webpack_public_path__ = window.__MICRO_APP_PUBLIC_PATH__\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\ninterface IRouteData {\n    path:string\n    PageComponent:React.ComponentType\n}\n\nconst routerData: IRouteData[] = [\n  {\n    path:\"/\",\n    PageComponent:React.lazy(()=>import(\"../pages/home\"))\n  },\n  {\n    path: \"/custom-form/\",\n    PageComponent: React.lazy(() => import(\"../pages/custom-form\")),\n  },\n  // {\n  //   path: \"/custom-flow-design/\",\n  //   PageComponent: React.lazy(() => import(\"../pages/custom-form\")),\n  // },\n];\n\nconst routerGuard = (route:any, props:any) => {\n  const { PageComponent } = route;\n  return <PageComponent {...route} {...props} />;\n};\n\nconst routers = routerData.map((route, i) => (\n  <Route\n    key={route.path}\n    exact={true}\n    path={route.path}\n    render={routerGuard.bind(null, route)}\n  />\n));\n\nexport default routers","import React, { useEffect } from 'react'\nimport { HashRouter, Switch,   useHistory } from 'react-router-dom'\nimport routers from './config'\n\nconst Loading= () =><>loading...</>\n\n// 此组件用于监听基座下发的跳转指令\nconst NavigatorFromBaseApp:React.FC = () => {\n  const history = useHistory()\n\n  useEffect(() => {\n    window.microApp?.addDataListener((data: Record<string, unknown>) => {\n      // 当基座下发path时进行跳转\n      if (data.path && data.path !== history.location.pathname) {\n        history.push(data.path as string)\n      }\n    })\n  }, [history])\n\n  return null\n}\n\nfunction App () {\n  // 子应用内部跳转时，通知侧边栏改变菜单状态\n  // function onRouteChange (): void {\n  //   if (window.__MICRO_APP_ENVIRONMENT__) {\n  //     // 发送全局数据，通知侧边栏修改菜单展示\n  //     window.microApp.setGlobalData({ name: window.__MICRO_APP_NAME__ })\n  //   }\n  // }\n\n  return (\n    <React.Suspense fallback={<Loading />}>\n    {/* 因为child-react17子应用是hash路由，主应用为history路由，所以不需要设置基础路由__MICRO_APP_BASE_ROUTE__ */}\n    <HashRouter>\n      <NavigatorFromBaseApp />\n      <Switch>\n          {routers}\n        {/* <Route exact={true} path=\"/formily2-test\" component={Formily2Test} /> */}\n        {/* <Redirect to='/' /> */}\n      </Switch>\n    </HashRouter>\n    </React.Suspense>\n  )\n}\n\nexport default App\n","import './public-path';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './router';\nimport 'antd/dist/antd.css'\nimport './index.css'\ndeclare global {\n  interface Window {\n    microApp: any\n    __MICRO_APP_NAME__: string\n    __MICRO_APP_ENVIRONMENT__: string\n    __MICRO_APP_BASE_ROUTE__: string\n  }\n}\n\n// 与基座的数据交互\nfunction handleMicroData () {\n  // 是否是微前端环境\n  if (window.__MICRO_APP_ENVIRONMENT__) {\n    // 主动获取基座下发的数据\n    // console.log('child-react17 getData:', window.microApp.getData());\n\n    // 监听基座下发的数据变化\n    window.microApp.addDataListener((data: Record<string, unknown>) => {\n      // console.log('child-react17 addDataListener:', data);\n    })\n\n    // 向基座发送数据\n    // setTimeout(() => {\n    //   window.microApp.dispatch({ myname: 'child-react17' });\n    // }, 3000)\n  }\n}\n\n// ----------分割线---默认模式------两种模式任选其一-----放开注释即可运行------- //\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Router />\n//   </React.StrictMode>,\n//   document.getElementById('react17-root')\n// );\n\n// console.log('微应用child-react17渲染了');\n\n// handleMicroData()\n\n// // 监听卸载操作\n// window.addEventListener('unmount', function () {\n//   ReactDOM.unmountComponentAtNode(document.getElementById('react17-root')!);\n//   console.log('微应用child-react17卸载了');\n// })\n\n// ----------分割线---umd模式------两种模式任选其一-------------- //\n// 将渲染操作放入 mount 函数\nfunction mount () {\n  ReactDOM.render(\n    // <React.StrictMode>\n      <Router />\n    // </React.StrictMode>\n    ,\n    document.getElementById('react17-root')\n  );\n\n  // console.log('微应用child-react17渲染了');\n\n  handleMicroData()\n}\n\n// 将卸载操作放入 unmount 函数\nfunction unmount () {\n  ReactDOM.unmountComponentAtNode(document.getElementById('react17-root')!);\n  // console.log('微应用child-react17卸载了');\n}\n\n// 微前端环境下，注册mount和unmount方法\nif (window.__MICRO_APP_ENVIRONMENT__) {\n  // @ts-ignore\n  window[`micro-app-${window.__MICRO_APP_NAME__}`] = { mount, unmount }\n} else {\n  // 非微前端环境直接渲染\n  mount();\n}\n"],"sourceRoot":""}